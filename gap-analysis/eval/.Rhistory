wd <- "D:/_tools/gap-analysis-cwr/trunk/gap-analysis/eval"
setwd(wd)
rMod <- read.table("./model/fps_all.tab",header=T)
rMod <- read.table("./model/fps_all.tab",header=T,sep="\t")
head(rMod)
rExp <- read.table("./expert/res_wheat.tab")
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
rExp[1:10,]
rExp[,1:5]
rExp <- t(rExp)
head(rExp)
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
wcol <- grep("Comparable.",names(rExp))
wcol
rExp <- rExp[,wcol]
View(rExp)
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- tExp[,wcol]
tExp <- rExp[,wcol]
tExp <- t(tExp)
head(tExp)
head(rMod)
tExp <- cbind(Taxa=row.names(tExp),tExp)
row.names(tExp) <- 1:nrow(tExp)
head(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
head(tExp)
str(tExp)
class(tExp)
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
class(tExp)
class(tExp)
class(rMod)
rExp <- read.table("./expert/res_wheat.tab",header=T,sep="\t")
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
head(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
head(tExp)
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {gsub("Comparable.Expert.Priority.Score..","",paste(x))})
head(tExp)
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(length(yr)-1))})
head(tExp)
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(length(yr)-1));return(yr)})
head(tExp)
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
head(tExp)
nexp <- nrow(rExp)
nexp
tExp
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",paste(x)); return(yr)})}
tExp
i
i=1
tExp[,(i+1)]
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); return(yr)})}
tExp
1?:1
1:1
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
tExp
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); yr<-gsub("N/A",NA,yr); return(yr)})}
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
tExp
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
head(scores)
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
head(scores)
plot(scores$Priority,scores$E1,ty="p",pch=20)
plot(scores$Priority,scores$E.1,ty="p",pch=20)
plot(scores$Priority,scores$E.1,ty="p",pch=20,xlims=c(0,10),ylims=c(0,10))
plot(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10))
plot(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10))
plot(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10))
plot(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10))
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
brks <- seq(-100,100,by=10)
brks
f1 <- hist(scores$RD.1,breaks=brks)
f1
plot(f1$mids,f1$counts)
plot(f1$mids,f1$counts,ty="l")
f1 <- hist(scores$RD.1,breaks=brks); f2 <- hist(scores$RD.2,breaks=brks)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
plot(f1$mids,f1$counts,ty="l")
lines(f2$mids,f2$counts,col="red")
plot(f1$mids,f1$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)")
lines(f2$mids,f2$counts,col="red")
## scatterplot
plot(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
## rd plot
brks <- seq(-100,100,by=10)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
plot(f1$mids,f1$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)")
lines(f2$mids,f2$counts,col="red")
colMeans(scores[,grep("E.",names(scores))],na.rm=T)
rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); yr<-gsub("N/A",NA,yr); return(yr)})}
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
#merge the two tables (with tExp as basis)
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
View(scores)
#merge the two tables (with tExp as basis)
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores$Threat <- NULL; scores$Relevance.to.Food.Security.in.Developing.Countries <- NULL
scores$Current.Breeding.Demand <- NULL
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
View(scores)
plot(scores$Priority,scores$Expert,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="blue")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
cor(scores$Priority,scores$Expert,method="spearman")
cor(scores$Priority,scores$Expert,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.1,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.2,method="spearman",use="pairwise.complete.obs")
rExp <- read.table("./expert/res_phaseolus.tab",header=T,sep="\t")
nexp <- nrow(rExp)
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); yr<-gsub("N/A",NA,yr); return(yr)})}
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
#merge the two tables (with tExp as basis)
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores$Threat <- NULL; scores$Relevance.to.Food.Security.in.Developing.Countries <- NULL
scores$Current.Breeding.Demand <- NULL
View(scores)
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
scores
cor(scores$Priority,scores$E.2,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.1,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$Expert,method="spearman",use="pairwise.complete.obs")
plot(scores$Priority,scores$Expert,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="blue")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
## rd plot
brks <- seq(-100,100,by=10)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
plot(f1$mids,f1$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)")
lines(f2$mids,f2$counts,col="red")
## scatterplot
plot(scores$Priority,scores$Expert,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="blue")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
png("phas_sc.png",width=1024,height=768,res=150,pointsize=12)
plot(scores$Priority,scores$Expert,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="blue")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
grid()
dev.off()
png("phas_sc.png",width=1024,height=768,res=150,pointsize=12)
par(mar=c(5,5,1,1))
plot(scores$Priority,scores$Expert,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),xlab="Model",ylab="Expert")
points(scores$Priority,scores$E.1,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="blue")
points(scores$Priority,scores$E.2,ty="p",pch=20,xlim=c(0,10),ylim=c(0,10),col="red")
abline(0,1)
grid()
dev.off()
## rd plot
brks <- seq(-100,100,by=10)
plotpng("phas_rd.png",width=1024,height=768,res=150,pointsize=12)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
plot(f1$mids,f1$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)")
lines(f2$mids,f2$counts,col="red")
grid()
dev.off()
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
scores$RD <- rowMeans(scores[,grep("RD.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
scores$RD <- scores$RD.1
}
scores
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
scores$RD <- (scores$Priority - scores$Expert) * 10
scores
## rd plot
brks <- seq(-100,100,by=10)
png("phas_rd.png",width=1024,height=768,res=150,pointsize=12)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
fm <- hist(scores$RD,breaks=brks,plot=F)
plot(fm$mids,fm$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)")
lines(f1$mids,f1$counts,col="blue")
lines(f2$mids,f2$counts,col="red")
grid()
dev.off()
plot(fm$mids,fm$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)",ylim=c(0,nrow(scores)*0.5))
## rd plot
brks <- seq(-100,100,by=10)
png("phas_rd.png",width=1024,height=768,res=150,pointsize=12)
f1 <- hist(scores$RD.1,breaks=brks,plot=F); f2 <- hist(scores$RD.2,breaks=brks,plot=F)
fm <- hist(scores$RD,breaks=brks,plot=F)
plot(fm$mids,fm$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)",ylim=c(0,nrow(scores)*0.5))
lines(f1$mids,f1$counts,col="blue")
lines(f2$mids,f2$counts,col="red")
grid()
dev.off()
cor(scores$Priority,scores$Expert,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.1,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.2,method="spearman",use="pairwise.complete.obs")
mean(scores$RD,na.rm=T)
mean(scores$RD,na.rm=T); sd(scores$RD,na.rm=T)
png("phas_rd.png",width=1024,height=768,res=150,pointsize=12)
par(mar=c(5,5,1,1))
plot(fm$mids,fm$counts,ty="l",ylab="Frequency",xlab="Relative difference (%)",ylim=c(0,nrow(scores)*0.5))
lines(f1$mids,f1$counts,col="blue")
lines(f2$mids,f2$counts,col="red")
grid()
dev.off()
cor(scores$Priority,scores$Expert,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.1,method="spearman",use="pairwise.complete.obs")
cor(scores$Priority,scores$E.2,method="spearman",use="pairwise.complete.obs")
mean(scores$RD,na.rm=T); sd(scores$RD,na.rm=T)
mean(scores$RD.1,na.rm=T); sd(scores$RD.1,na.rm=T)
mean(scores$RD.2,na.rm=T); sd(scores$RD.2,na.rm=T)
rMod <- read.table("./model/fps_all.tab",header=T,sep="\t")
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); yr<-gsub("N/A",NA,yr); return(yr)})}
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
#merge the two tables (with tExp as basis)
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores$Threat <- NULL; scores$Relevance.to.Food.Security.in.Developing.Countries <- NULL
scores$Current.Breeding.Demand <- NULL
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
scores$RD <- (scores$Priority - scores$Expert) * 10 #RD of avg
head(scores)
scores
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
#load model results
rMod <- read.table("./model/fps_all.tab",header=T,sep="\t")
#expert data
rExp <- read.table("./expert/res_phaseolus.tab",header=T,sep="\t")
nexp <- nrow(rExp)
#reorganise
wcol <- grep("Comparable.",names(rExp))
tExp <- rExp[,wcol]
tExp <- as.data.frame(t(tExp))
tExp <- cbind(Taxa=row.names(tExp),tExp); row.names(tExp) <- 1:nrow(tExp)
names(tExp)[2:ncol(tExp)] <- paste("E.",1:(ncol(tExp)-1),sep="")
#formatting names
tExp$Taxa <- sapply(tExp$Taxa,FUN=function(x) {yr<-gsub("Comparable.Expert.Priority.Score..","",paste(x));yr <- substr(yr,1,(nchar(yr)-1));return(yr)})
for (i in 1:nexp) {tExp[,(i+1)] <- sapply(tExp[,(i+1)],FUN=function(x) {yr<-gsub("High Priority: ","",paste(x)); yr<-gsub("No Need for Further Collection: ","",yr); yr<-gsub("N/A",NA,yr); return(yr)})}
for (i in 1:nexp) {tExp[,(i+1)] <- as.numeric(tExp[,(i+1)])}
#merge the two tables (with tExp as basis)
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores$Threat <- NULL; scores$Relevance.to.Food.Security.in.Developing.Countries <- NULL
scores$Current.Breeding.Demand <- NULL
scores
scores$TAXON_nameinga <- NULL; scores$crop_code <- NULL; scores$notes <- NULL
scores <- merge(tExp,rMod,by="Taxa",all.x=T,all.y=F)
scores$TAXON_nameinga <- NULL; scores$crop_code <- NULL; scores$notes <- NULL
scores
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$Priority - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
#calculate RDs
for (i in 1:nexp) {
scores$VAL <- (scores$FPS - scores[,paste("E.",i,sep="")]) * 10
names(scores)[ncol(scores)] <- paste("RD.",i,sep="")
}
scores
#if more than one expert then do avg
if (nexp > 1) {
scores$Expert <- rowMeans(scores[,grep("E.",names(scores))],na.rm=T)
} else {
scores$Expert <- scores$E.1
}
scores$RD <- (scores$Priority - scores$Expert) * 10 #RD of avg
(nexp > 1)
scores$Expert
scores$RD <- (scores$FPS - scores$Expert) * 10 #RD of avg
scores
i=1
fps <- scores$FPS
eps <- scores[,paste("E.",i,sep="")]
eps
fps
?lm
mod <- lm(fps ~ eps - 1)
mod
mod <- lm(fps ~ eps)
fps_p <- predict(mod,newdata=eps)
fps_p <- predict(mod,newdata=eps[which(!is.na(eps))])
fps_p <- predict(mod,eps)
?predict
fps_p <- predict(mod,newdata=data.frame(fps=fps,eps=eps))
fps_p
eps
fps
plot(fps,fps_p)
mod
fps_p <- predict(mod,newdata=data.frame(eps=eps))
plot(fps,fps_p)
plot(fps,eps)
lines(fps_p,eps)
fitdata <- data.frame(fps=scores$FPS,eps=scores[,paste("E.",i,sep="")])
fitdata <- data.frame(fps=scores$FPS,eps=scores[,paste("E.",i,sep="")])
fitdata <- fitdata[which(!is.na(fitdata$fps)),]
fitdata <- fitdata[which(!is.na(fitdata$eps)),]
fitdata
fps_p <- predict(mod,newdata=data.frame(eps=eps),interval="predict")
fps_p
mod
?predict.lm
fps_p <- predict(mod,newdata=data.frame(eps=eps),interval="predict",level=0.95)
fps_p
